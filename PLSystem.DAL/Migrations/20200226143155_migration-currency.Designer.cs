// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PLSystem.DAL.Data;

namespace PLSystem.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200226143155_migration-currency")]
    partial class migrationcurrency
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PLSystem.DAL.EntityModels.DailyPL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Business_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Commentary1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commentary2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Daily_PL")
                        .HasColumnType("float");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<bool>("Sent_To_FO_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.HasIndex("UserId");

                    b.ToTable("DailyPLs");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.DailyTrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Adjustment")
                        .HasColumnType("float");

                    b.Property<double>("Ammends")
                        .HasColumnType("float");

                    b.Property<DateTime>("Business_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("NewTrades")
                        .HasColumnType("float");

                    b.Property<int>("PortfolioId")
                        .HasColumnType("int");

                    b.Property<double>("Unexplained")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("DailyTrades");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.Estimate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstimateAmount")
                        .HasColumnType("float");

                    b.Property<double>("ExplainedVariance")
                        .HasColumnType("float");

                    b.Property<string>("HierarchyId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HierarchyId");

                    b.ToTable("Estimates");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.Hierarchy", b =>
                {
                    b.Property<string>("DEPT_LEAF_NODE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DEPT_L3_NODE_M")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEPT_L4_NODE_M")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEPT_L5_NODE_M")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEPT_L6_NODE_M")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEPT_L7_NODE_M")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DEPT_LEAF_NODE");

                    b.ToTable("Hierarchies");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("HierarchyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Portfolio_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source_System")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("PortfolioId");

                    b.HasIndex("HierarchyId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName");

                    b.HasIndex("UserName1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.UserGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.UserGroupHierarchy", b =>
                {
                    b.Property<string>("HierarchyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HierarchyId", "UserGroupId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("UserGroupHierarchies");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.UserUserGroup", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserName", "UserGroupId");

                    b.HasIndex("UserGroupId");

                    b.ToTable("UserUserGroups");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.DailyPL", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.Portfolio", "Portfolio")
                        .WithMany("DailyPLs")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLSystem.DAL.EntityModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.DailyTrade", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.Portfolio", "Portfolio")
                        .WithMany("DailyTrades")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.Estimate", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.Hierarchy", "Hierarchy")
                        .WithMany("Estimates")
                        .HasForeignKey("HierarchyId");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.Portfolio", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.Hierarchy", "Hierarchy")
                        .WithMany("Portfolios")
                        .HasForeignKey("HierarchyId");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.User", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.User", null)
                        .WithMany("Users")
                        .HasForeignKey("UserName1");
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.UserGroupHierarchy", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.Hierarchy", "Hierarchy")
                        .WithMany("UserGroupHierarchies")
                        .HasForeignKey("HierarchyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLSystem.DAL.EntityModels.UserGroup", "UserGroup")
                        .WithMany("UserGroupHierarchies")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PLSystem.DAL.EntityModels.UserUserGroup", b =>
                {
                    b.HasOne("PLSystem.DAL.EntityModels.UserGroup", "UserGroup")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PLSystem.DAL.EntityModels.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
